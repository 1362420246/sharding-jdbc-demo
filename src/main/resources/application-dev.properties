#分库

#数据源名称，多数据源以逗号分隔
sharding.jdbc.datasource.names=db0,db1

#数据库连接池类名称
sharding.jdbc.datasource.db0.type=com.alibaba.druid.pool.DruidDataSource
#数据库驱动类名
sharding.jdbc.datasource.db0.driver-class-name=com.mysql.cj.jdbc.Driver
#数据库url连接 ?serverTimezone=GMT%2B8
sharding.jdbc.datasource.db0.url=jdbc:mysql://127.0.0.1:3306/electrocar_ga_test01?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=UTF-8
#数据库用户名
sharding.jdbc.datasource.db0.username=root
#数据库密码
sharding.jdbc.datasource.db0.password=123456

#第二个数据库配置
sharding.jdbc.datasource.db1.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.db1.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.db1.url=jdbc:mysql://127.0.0.1:3306/electrocar_ga_test02?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=UTF-8
sharding.jdbc.datasource.db1.username=root
sharding.jdbc.datasource.db1.password=123456

#数据分片配置-----------------start

#由数据源名 + 表名组成，以小数点分隔。多个表以逗号分隔，支持inline表达式。缺省表示使用已知数据源与逻辑表名称生成数据节点。
#用于广播表（即每个库中都需要一个同样的表用于关联查询，多为字典表）或只分库不分表且所有库的表结构完全一致的情况
sharding.jdbc.config.sharding.tables.tb_device.actual-data-nodes=db$->{0..1}.tb_device
#自增列名称，缺省表示不使用自增主键生成器
sharding.jdbc.config.sharding.tables.tb_device.key-generator-column-name=id
#自定义主键生成策略
sharding.jdbc.config.sharding.tables.tb_device.key-generator-class-name=com.qbk.util.IdKeyGenerator

sharding.jdbc.config.sharding.tables.tb_electric_cars.actual-data-nodes=db$->{0..1}.tb_electric_cars
sharding.jdbc.config.sharding.tables.tb_electric_cars.key-generator-column-name=id
sharding.jdbc.config.sharding.tables.tb_electric_cars.key-generator-class-name=com.qbk.util.IdKeyGenerator

sharding.jdbc.config.sharding.tables.tb_per_car_rel.actual-data-nodes=db$->{0..1}.tb_per_car_rel
sharding.jdbc.config.sharding.tables.tb_per_car_rel.key-generator-column-name=ec_id
sharding.jdbc.config.sharding.tables.tb_per_car_rel.key-generator-class-name=com.qbk.util.IdKeyGenerator

sharding.jdbc.config.sharding.tables.tb_personnel.actual-data-nodes=db$->{0..1}.tb_personnel
sharding.jdbc.config.sharding.tables.tb_personnel.key-generator-column-name=id
sharding.jdbc.config.sharding.tables.tb_personnel.key-generator-class-name=com.qbk.util.IdKeyGenerator

sharding.jdbc.config.sharding.tables.tb_region.actual-data-nodes=db0.tb_region


#默认数据库分片策略，同分库策略
#sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=id
#sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=db$->{id%2}

#自定义分片策略
sharding.jdbc.config.sharding.default-database-strategy.standard.precise-algorithm-class-name=com.qbk.util.MyPreciseShardingAlgorithm
sharding.jdbc.config.sharding.default-database-strategy.standard.sharding-column=id





